---
Description: >
  Tabi Idris - Udacity 2020 - Capstone Project
  CloudFormation file to create EC2 instances.
Parameters:
  Capstone:
    Description: An Enviroment name to tag resources
    ConstraintDescription: Your env is invalid! Please, type an environment from the list
    Type: String
    AllowedValues:
      - sandbox #env to developers create and test web apps
      - staging #env to pre-live web apps
      - production #env to add web app to production

  SourceIP:
    Description: Ip address to allow SSH access to the bastion host
    Type: String
    Default: 0.0.0.0/0


  KeyJenkinsSSH:
    Description: KeyName to access jenkins host
    Type: "AWS::EC2::KeyPair::KeyName"
    Default: capstone

Mappings:
  CapstoneRegion:
    us-west-2:
      production: ami-003634241a8fcdec0

Resources:
  CapstoneSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to ec2 and SHH access
      VpcId:
        Fn::ImportValue: !Sub "${Capstone}-VPC"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Sub ${SourceIP}
      Tags:
        - Key: Name
          Value: !Sub ${Capstone}-WASG

  CapstoneEC2:
    Type: AWS::EC2::Instance
    Properties:
      UserData:
        Fn::Base64: !Sub |
            #!/bin/bash
            apt update
            apt install openjdk-8-jdk -y
            cd /home/ubuntu
            wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add -
            sh -c 'echo deb http://pkg.jenkins-ci.org/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
            apt update
            apt install jenkins -y
            apt install tidy -y
            systemctl status jenkins
            apt-get update
            apt install docker.io -y
            systemctl start docker
            systemctl enable docker
            groupadd docker
            usermod -aG docker $USER
            newgrp docker
            chmod 666 /var/run/docker.sock
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" 
            unzip awscliv2.zip
            ./aws/install -y
            ./aws/install -i /usr/local/aws-cli -b /usr/local/bin -y
            curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mv ./kubectl /usr/local/bin/kubectl
      SecurityGroupIds:
        - Ref: CapstoneSG
      SubnetId:
        Fn::ImportValue: !Sub "${Capstone}-Subnets1"
      BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: "10"
            DeleteOnTermination: true
            VolumeType: "gp2"
      ImageId: !FindInMap [CapstoneRegion, !Ref "AWS::Region", !Ref Capstone]
      InstanceType: t2.small
      KeyName: !Sub ${KeyJenkinsSSH}
  
  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain:
        Fn::ImportValue: !Sub "${Capstone}-VPC"

  EIPAssociation0:
    Type: AWS::EC2::EIPAssociation
    DependsOn:
      - CapstoneEC2
      - EIP
    Properties:
      InstanceId:
        Ref: CapstoneEC2
      AllocationId:
        Fn::GetAtt:
          - EIP
          - AllocationId

Outputs:
  Website:
    Description: The Public DNS for the EC2 Instance
    Value: !Join ['', ['http://', !GetAtt 'CapstoneEC2.PublicDnsName', ':8080']]
